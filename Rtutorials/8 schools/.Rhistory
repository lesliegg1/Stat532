chain1 <- rmnorm(1, rep(0, 1000), Sigma)
head(chain1)
chain1 <- cbind(rmnorm(1, rep(0, 1000), Sigma))
head(chain1)
chain1 <- c(rmnorm(1, rep(0, 1000), Sigma))
head(chain1)
plot(1:nsim, chain1, type="l", xlab="iteration", ylab="")
one3 <- c(rmnorm(1, rep(0, 1000), Sigma))
set.seed(321)
Sigma <- diag(nsim)
require(gdata)
upperTriangle(Sigma) <- 0.8
lowerTriangle(Sigma) <- 0.8
require(LearnBayes)
one3 <- c(rmnorm(1, rep(0, nsim), Sigma))
names(chains) <- c("one3", "two3", "three3")
plot(1:nsim, chain1, type="l", xlab="iteration", ylab="")
plot(1:nsim, one3, type="l", xlab="iteration", ylab="")
head(one3)
one3
set.seed(321)
Sigma <- diag(nsim)
require(gdata)
upperTriangle(Sigma) <- 0.8
lowerTriangle(Sigma) <- 0.8
require(LearnBayes)
one3 <- c(rmnorm(1, rep(0, nsim), Sigma))
two3 <- c(rmnorm(1, rep(0, nsim), Sigma))
three3 <- c(rmnorm(1, rep(0, nsim), Sigma))
names(chains) <- c("one3", "two3", "three3")
plot(1:nsim, one3, type="l", xlab="iteration", ylab="")
lines(1:nsim, two3, col="red")
lines(1:nsim, three3, col="green")
plot(1:nsim, one3, type="l", xlab="iteration", ylab="", ylim=c(-2,2))
lines(1:nsim, two3, col="red")
lines(1:nsim, three3, col="green")
plot(1:nsim, one3, type="l", xlab="iteration", ylab="", ylim=c(-1,3))
lines(1:nsim, two3, col="red")
lines(1:nsim, three3, col="green")
dtfolded <- function (x, df=4, A=1) {
(1+1/df*(x/A)^2)^(-(df+1)/2)
}
x <- seq(0, 5, by=0.01)
plot(x, dtfolded(x), type="l", main="Folded t density")
x <- seq(0, 5, by=0.01)
num.int <- sum(x*dtfolded(x))*(x[2]-x[1])
plot(x, dtfolded(x)/num.int, type="l", main="Half-t density")
sum(dt.folded(x)/num.int)
sum(dtfolded(x)/num.int)
num.int <- sum(x*dtfolded(x)*(x[2]-x[1]))
num.int
plot(x, dtfolded(x)/num.int, type="l", main="Half-t density")
sum(dtfolded(x))
sum(x*dtfolded(x)*(x[2]-x[1]))/num.int
sum(x*dtfolded(x)/num.int*(x[2]-x[1]))/num.int
sum(x*dtfolded(x)/num.int*(x[2]-x[1]))
rtfolded <- function(nsim, df=4, mu=0, sigma=1){
z <- abs(rnorm(nsim, mu, sigma^2))
x <- rchisq(nsim, df)
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
hist(rtfolded(1000), freq=FALSE, nclass=40)
lines(x, dtfolded(x))
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.8))
lines(x, dtfolded(x))
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.8))
lines(x, dtfolded(x)/num.int)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int)
lines(x, dtfolded(x)/num.int, lwd=3)
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
rtfolded <- function(nsim, df=4){
z <- abs(rnorm(nsim, 0, 1))
x <- rchisq(nsim, df)
theta <- sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
rtfolded <- function(nsim, df=4){
z <- abs(rnorm(nsim, 0, 1))
x <- rchisq(nsim, df)
theta <- z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
set.seed(39)
rtfolded <- function(nsim, df=4){
z <- abs(rnorm(nsim, 0, 1))
x <- rchisq(nsim, df)
theta <- z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
rtfolded <- function(nsim, df=4){
z <- abs(rnorm(nsim, 0, 1))
x <- rchisq(nsim, df)
theta <- z*sqrt(df/x)
return(theta)
}
set.seed(39)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
rtfolded <- function(nsim, df=4){
z <- abs(rnorm(nsim, 0, 1))
x <- rchisq(nsim, df)
theta <- z*sqrt(df/x)
return(theta)
}
set.seed(40)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
rtfolded <- function(nsim, df=4){
z <- abs(rnorm(nsim, 0, 1))
x <- rchisq(nsim, df)
theta <- z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
# function to calculate density of a folded non-central t-distribution
dtfolded <- function (x, df=4, A=1) {
(1+1/df*(x/A)^2)^(-(df+1)/2)
}
x <- seq(0, 5, by=0.01)
num.int <- sum(x*dtfolded(x)*(x[2]-x[1]))
plot(x, dtfolded(x)/num.int, type="l", main="Half-t density")
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=1){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, df/2*A^2)
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (df/2*A^2))
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=1){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (df/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=1){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (df/2*A^2))
theta <- mu+A*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=1){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (df/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=1){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*3^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x)/num.int, lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*3^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=3)/num.int, lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=3)/num.int, lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (df/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=3)/num.int, lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=3)/num.int, lwd=3)
# function to calculate density of a folded non-central t-distribution
dtfolded <- function (x, df=4, A=1) {
num.int <- sum(x*dtfolded(x)*(x[2]-x[1]))
(1+1/df*(x/A)^2)^(-(df+1)/2)/num.int
}
x <- seq(0, 5, by=0.01)
plot(x, dtfolded(x), type="l", main="Half-t density")
dtfolded <- function (x, df=4, A=1) {
p <- (1+1/df*(x/A)^2)^(-(df+1)/2)
num.int <- sum(x*p*(x[2]-x[1]))
dt <- p/num.in
return(dt)
}
x <- seq(0, 5, by=0.01)
plot(x, dtfolded(x), type="l", main="Half-t density")
dtfolded <- function (x, df=4, A=1) {
p <- (1+1/df*(x/A)^2)^(-(df+1)/2)
num.int <- sum(x*p*(x[2]-x[1]))
dt <- p/num.int
return(dt)
}
x <- seq(0, 5, by=0.01)
plot(x, dtfolded(x), type="l", main="Half-t density")
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=3)/num.int, lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=1){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=1), lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=3), lwd=3)
# function to calculate density of a folded non-central t-distribution
dtfolded <- function (x, df=4, A=1) {
p <- (1+1/df*(x/A)^2)^(-(df+1)/2)
num.int <- sum(x*p*(x[2]-x[1]))
dt <- p/num.int
return(dt)
}
x <- seq(0, 10, by=0.01)
plot(x, dtfolded(x), type="l", main="Half-t density")
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=3), lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (df/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=3), lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=1){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (df/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=1), lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=1){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=1), lwd=3)
# function to calculate density of a folded non-central t-distribution
dtfolded <- function (x, df=4, A=1) {
p <- (1+1/df*(x/A)^2)^(-(df+1)/2)
num.int <- sum(p*(x[2]-x[1]))
dt <- p/num.int
return(dt)
}
x <- seq(0, 10, by=0.01)
plot(x, dtfolded(x), type="l", main="Half-t density")
# function to calculate density of a folded non-central t-distribution
dtfolded <- function (x, df=4, A=1) {
p <- (1+1/df*(x/A)^2)^(-(df+1)/2)
num.int <- sum(p*(x[2]-x[1]))
dt <- p/num.int
return(dt)
}
x <- seq(0, 10, by=0.01)
plot(x, dtfolded(x), type="l", main="Half-t density", lwd=2)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=1){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=1), lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=3), lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=6){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=6), lwd=3)
# function to calculate density of a folded non-central t-distribution
dtfolded <- function (x, df=4, A=1) {
p <- (1+1/df*(x/A)^2)^(-(df+1)/2)
num.int <- sum(p*(x[2]-x[1]))
dt <- p/num.int
return(dt)
}
x <- seq(0, 20, by=0.01)
plot(x, dtfolded(x), type="l", main="Half-t density", lwd=2)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=6){
z <- abs(rnorm(nsim, 0, 1))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=6), lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=6){
z <- abs(rnorm(nsim, mu, sigma))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40, ylim=c(0, 0.9))
lines(x, dtfolded(x, A=6), lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=6){
z <- abs(rnorm(nsim, mu, sigma))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40)
lines(x, dtfolded(x, A=6), lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, mu, sigma))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40)
lines(x, dtfolded(x, A=3), lwd=3)
par(mfrow=c(2,3))
require(MCMCpack)
sigmasq <- seq(0, 5, by=0.01)
plot(sigmasq, dinvgamma(sigmasq, 0.001, 0.001), type="l", main="InvGamma(0.001, 0.001)")
logsigma <- seq(-.6, .6, by = 0.01)
plot(logsigma, dunif(logsigma, -100, 100), type="l", main="Unif(-100, 100) on log(sigma)")
plot(sigmasq, dunif(sigmasq, 0, 100), type="l", main="Unif(0, 100) on sigma")
setwd("~/Documents/Stat532/Rtutorials/8 schools")
source("folded_t_functions.R")
curve(d.tfold(x, df=4), xlim=c(0,5), ylim=c(0,0.85),
col=2, lwd=2, main="Folded t with df=4")
plot(sigmasq, rep(1/2, length(sigmasq)), type="l", main="1/sigmasq")
#ask about this one, make the constant anything?
plot(sqrt(sigmasq), rep(1, length(sigmasq)), type="l", main="sigma proportional to 1")
Gustaf.prior <- function(sigmasqtheta, sigmasqy=1, a=7){
a/sigmasqy*(1+sigmasqtheta/sigmasqy)^(a+1)
}
gustafprior <- apply(cbind(sigmasq), 1, Gustaf.prior)
plot(sigmasq, gustafprior, type="l", main="Gustaf Prior with sigma_y squared equal to 1 and a=7")
par(mfrow=c(2,3))
require(MCMCpack)
sigmasq <- seq(0, 5, by=0.01)
plot(sigmasq, dinvgamma(sigmasq, 0.001, 0.001), type="l", main="InvGamma(0.001, 0.001)")
logsigma <- seq(-.6, .6, by = 0.01)
plot(logsigma, dunif(logsigma, -100, 100), type="l", main="Unif(-100, 100) on log(sigma)")
plot(sigmasq, dunif(sigmasq, 0, 100), type="l", main="Unif(0, 100) on sigma")
setwd("~/Documents/Stat532/Rtutorials/8 schools")
source("folded_t_functions.R")
curve(d.tfold(x, df=4), xlim=c(0,5), ylim=c(0,0.85),
col=2, lwd=2, main="Folded t with df=4")
plot(sigmasq, rep(1/2, length(sigmasq)), type="l", main="1/sigmasq")
#ask about this one, make the constant anything?
plot(sigmasq, rep(1, length(sigmasq)), type="l", main="sigma proportional to 1")
Gustaf.prior <- function(sigmasqtheta, sigmasqy=1, a=7){
a/sigmasqy*(1+sigmasqtheta/sigmasqy)^(a+1)
}
gustafprior <- apply(cbind(sigmasq), 1, Gustaf.prior)
plot(sigmasq, gustafprior, type="l", main="Gustaf Prior with sigma_y squared equal to 1 and a=7")
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, mu, sigma))
x <- rgamma(nsim, df/2, (df/2*A^2))
theta <- mu+A*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40)
lines(x, dtfolded(x, A=3), lwd=3)
rtfolded <- function(nsim, df=4, mu=0, sigma=1, A=3){
z <- abs(rnorm(nsim, mu, sigma))
x <- rgamma(nsim, df/2, (1/2*A^2))
theta <- mu+sigma*z*sqrt(df/x)
return(theta)
}
set.seed(31)
hist(rtfolded(1000), freq=FALSE, nclass=40)
lines(x, dtfolded(x, A=3), lwd=3)
par(mfrow=c(2,3))
require(MCMCpack)
sigmasq <- seq(0, 5, by=0.01)
plot(sigmasq, dinvgamma(sigmasq, 0.001, 0.001), type="l", main="InvGamma(0.001, 0.001)")
logsigma <- seq(-.6, .6, by = 0.01)
plot(logsigma, dunif(logsigma, -100, 100), type="l", main="Unif(-100, 100) on log(sigma)")
plot(sigmasq, dunif(sigmasq, 0, 100), type="l", main="Unif(0, 100) on sigma")
setwd("~/Documents/Stat532/Rtutorials/8 schools")
source("folded_t_functions.R")
curve(d.tfold(x, df=4), xlim=c(0,5), ylim=c(0,0.85), xlab="sigma",
col=2, lwd=2, main="Folded t with df=4")
plot(sigmasq, rep(1/2, length(sigmasq)), type="l", main="1/sigmasq")
#ask about this one, make the constant anything?
plot(sigmasq, rep(1, length(sigmasq)), type="l", main="sigma proportional to 1")
Gustaf.prior <- function(sigmasqtheta, sigmasqy=1, a=7){
a/sigmasqy*(1+sigmasqtheta/sigmasqy)^(a+1)
}
gustafprior <- apply(cbind(sigmasq), 1, Gustaf.prior)
plot(sigmasq, gustafprior, type="l", main="Gustaf Prior with sigma_y squared equal to 1 and a=7")
logsigma.draws <- runif(10000, -100, 100)
logsigma.draws <- runif(10000, -100, 100)
sigma.draws <- exp(logsigma.draws)
plot(sqrt(sigma), sigma.draws)
hist(sigma.draws)
hist(sigma.draws, freq=FALSE)
hist(logsigma.draws)
logsigma.draws <- runif(1000, -100, 100)
sigma.draws <- exp(logsigma.draws)
hist(sigma.draws, freq=FALSE)
hist(sigma.draws, freq=FALSE, nclass=50)
hist(sigma.draws, freq=FALSE, nclass=100)
hist(sigma.draws, freq=FALSE, nclass=50)
hist(sigma.draws, freq=FALSE)
logsigma.draws <- runif(1000, -100, 100)
sigmasq.draws <- exp(logsigma.draws)^2
hist(sigmasq.draws, freq=FALSE)
lines(dinvgamma(sigmasq, 0.001, 0.001))
hist(sigmasq.draws, freq=FALSE, xlim=c(0, 10))
lines(dinvgamma(sigmasq, 0.001, 0.001))
logsigma.draws <- runif(1000, -100, 100)
sigmasq.draws <- exp(logsigma.draws)^2
hist(sigmasq.draws, freq=FALSE, xlim=c(0, 10), ylim=c(0, 0.08))
lines(dinvgamma(sigmasq, 0.001, 0.001))
